{
    "collab_server" : "",
    "contents" : "# let's fix up the school dataframe to fill out the blanks\nlibrary(tidyr)\nlibrary(corrplot)\n\n# get count of courses per school\ncourse_counts <- courses %>%\n  group_by(school_id) %>%\n  summarize(course_count=n())\n\n# get count of departments\n\ndepartments_count <- departments %>%\n  group_by(school_id) %>%\n  summarize(dep_count=n())\n\n# get the count of documents for each course\ncourse_doc_count <- dbGetQuery(con, \n  \"select courses.id, count(documents.id) from courses\n  left join documents on documents.course_id = courses.id\n  GROUP BY courses.id\")\n\nschool_course_doc_count <- dbGetQuery(con, \n                               \"select courses.school_id, courses.id, count(documents.id) from courses\n                                left join documents on documents.course_id = courses.id\n                               GROUP BY courses.id, courses.school_id;\")\n\n# get ratio of courses with documents vs # courses per school\nschool_course_doc_ratio <- \n  school_course_doc_count %>% mutate(has_docs = count > 0) %>%\n  group_by(school_id) %>%\n  summarise(has_doc_ratio = mean(has_docs), num_course_with_docs=sum(has_docs))\n\ntotal_docs_count <- doc_count %>% group_by(school_id) %>% summarize(total_docs = sum(num_of_docs))\n\n# update the schools df with new variables and information\nschools2 <- left_join(schools, course_counts, by=c(\"id\" = \"school_id\")) %>%\n  left_join(departments_count, by=c(\"id\" = \"school_id\")) %>%\n  select(-c(departments_count, courses_count)) %>%\n  rename(departments_count = dep_count, courses_count = course_count) %>%\n  left_join(school_course_doc_ratio, by=c(\"id\" = \"school_id\"))\n\nschools2['id'] <- as.factor(schools2[['id']])\n\n# get document counts per school\ndoc_count <- documents %>% \n  group_by(school_id, kind) %>%\n  summarise(num_of_docs = n())\ndoc_count['school_id'] <- as.factor(doc_count[['school_id']])\n\ndoc_count_spread <- spread(doc_count, key = kind, value = num_of_docs) %>%\n  mutate(total_docs = `1` + `2` + `3`) %>%\n  rename(doc_1=`1`, doc_2=`2`, doc_3=`3`)\n\nschools3 <- left_join(schools2, doc_count_spread, by=c(\"id\" = \"school_id\"))\n\n#get enrollments per school\nenrollments_count <- enrollments %>%\n  group_by(school_id) %>%\n  summarise(num_of_enrollments = n())\nenrollments_count['school_id'] <- as.factor(enrollments_count[['school_id']])\n\nschools3 <- left_join(schools3, enrollments_count, by=c(\"id\" = \"school_id\"))\n\n# now let's join the output variable, subscriptions ratio to the table\n\n# first let's alter the subscriptions ratio so that we record the total subscribers\n# and not just people who aren't\nsubs_with_na <- is.na(subscriptions_ratio$kind)\nsubscriptions_ratio$subscriptions[subs_with_na] <- \n  subscriptions_ratio$total_students[subs_with_na] - subscriptions_ratio$subscriptions[subs_with_na]\n\nsubscriptions_ratio$subscription_ratio[subs_with_na] <-\n  1 - subscriptions_ratio$subscription_ratio[subs_with_na]  \nsubscriptions_ratio$kind[subs_with_na] <- \"total_subs\"\n#spread_subs_ratio <- spread(subscriptions_ratio, kind, subscriptions)\n#spread_subs_ratio[is.na(spread_subs_ratio)] <- 0\n#names(spread_subs_ratio)[7] <- \"total_subs\"\n\nschools3 <- left_join(schools3, subscriptions_ratio, by=c(\"id\" = \"school_id\"))\n\nschools_final <- schools3\nrm(schools3)\nschools_final$country_id <- as.factor(schools_final$country_id)\n# deal with totals for now\nnums <- sapply(schools_final, is.numeric)\ncorr_matrix <- cor((schools_final %>% filter(kind == \"total_subs\"))[nums])\nsub_ratio_correlations <- corr_matrix[, \"subscription_ratio\"]\n\n### PLOTS ####\n\nsub_ratio_cor_plot <- corrplot(corr_matrix, method=\"ellipse\", order=\"hclust\")\n\ndoc_plot <-\n  doc_count %>%\n  ggplot(aes(x=school_id, y=num_of_docs, fill=kind)) +\n  geom_bar(stat = \"identity\") +\n  ylab(label = \"Number of Documents\") +\n  xlab(label = \"School ID\") + \n  ggtitle(\"Number of Documents Per School Split on Type\") +\n  scale_fill_brewer(palette = \"Paired\", name=\"Kind of Document\")\n\nenrollment_plot <- \n  enrollments_count %>% \n  ggplot(aes(x=school_id, y=num_of_enrollments, fill=school_id)) + \n  geom_bar(stat=\"identity\") + \n  scale_fill_brewer(palette = \"Paired\", name=\"School ID\") +\n  ylab(label = \"Enrollments\") +\n  xlab(label = \"School ID\") + \n  ggtitle(\"Number of Enrollments Per School\")\n\n# now let's create another plot vs `has_doc_ratio`\nhas_doc_ratio_plot <- \n  schools2 %>%\n  ggplot(aes(x=id, y=has_doc_ratio, fill=id)) +\n  geom_bar(stat=\"identity\") +\n  ylab(label = \"Ratio of courses with documents\") +\n  xlab(label = \"School ID\") + \n  ggtitle(\"Schools vs Ratio of Courses with Content\")\n\n# plot of school vs number courses with docs \ncourses_with_docs_per_school_plot <- \n  schools2 %>%\n  ggplot(aes(x=id, y=num_course_with_docs, fill=id)) +\n  geom_bar(stat=\"identity\") +\n  ylab(label = \"Number of courses with documents\") +\n  xlab(label = \"School ID\") + \n  ggtitle(\"Schools vs Ratio of Courses with Content\")\n\n#\ncourses_with_docs_per_school_plot <- \n  schools2 %>%c\n  ggplot(aes(x=id, y=num_course_with_docs, fill=id)) +\n  geom_bar(stat=\"identity\") +\n  ylab(label = \"Number of courses with documents\") +\n  xlab(label = \"School ID\") + \n  ggtitle(\"Schools vs Ratio of Courses with Content\")\n  \nmultiplot(doc_plot, enrollment_plot, subs_plot, has_doc_ratio_plot, cols=2)\n\n\n# let's try a model sir\nmodel <- glm(subscription_ratio ~ courses_count + departments_count + has_doc_ratio + num_course_with_docs + total_docs + num_of_enrollments + total_students, \n             data = schools_final %>% filter(kind == \"total_subs\"), \n             family=gaussian)\n\nsummary(model)\n\nmodel2 <- lm(subscription_ratio ~ courses_count + departments_count + has_doc_ratio + num_course_with_docs + total_docs + num_of_enrollments + total_students, \n             data = schools_final %>% filter(kind == \"total_subs\"))\nsummary(model2)\n\nmodel3 <- glm(subscriptions ~ courses_count + departments_count + has_doc_ratio + num_course_with_docs + doc_1 + doc_2 + doc_3 + total_docs + num_of_enrollments + total_students, \n              data = schools_final %>% filter(kind == \"total_subs\"), \n              family=poisson)\nsummary(model3)\ncoef(model3)\nexp(coef(model3))\n\nmodel4 <- glm(subscriptions ~ courses_count + departments_count + has_doc_ratio + num_course_with_docs + total_docs + num_of_enrollments + total_students, \n              data = schools_final %>% filter(kind == \"total_subs\"), \n              family=quasipoisson)\nsummary(model4)\n\n# unfortunately these models aren't that good, particularly because the degrees of freedom are incredibly low\n# we onyl have 10 data points\n\n\nlibrary(lmtest)\nbase_model <- glm(subscriptions ~ 1, \n                  data = schools_final %>% filter(kind == \"total_subs\"), \n                  family=poisson)\n\nlrtest(base_model, model3)\n",
    "created" : 1503683595917.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4070779730",
    "id" : "C96AB36D",
    "lastKnownWriteTime" : 1503873534,
    "last_content_update" : 1503893666671,
    "path" : "~/students/school.R",
    "project_path" : "school.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}